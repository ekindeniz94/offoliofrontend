name: Build, Package, Release (main)
'on':
  release:
    types:
      - created
  push:
    branches:
      - main
env:
  VERSION: null
jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: get semversion
        run: |
          VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Get last commit hash
        id: lasthash
        run: |
          LAST_HASH=$(git rev-parse --short HEAD)
          echo "LAST_HASH=$LAST_HASH" >> $GITHUB_ENV
      - id: containerRegistryLogin
        name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.MO_REGISTRY_AUTH_URL__MAIN }}
          username: ${{ vars.MO_REGISTRY_USER__MAIN }}
          password: ${{ secrets.MO_REGISTRY_PAT__MAIN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: ${{ vars.MO_DOCKERCONTEXT__MAIN }}
          file: ${{ vars.MO_DOCKERFILE__MAIN }}
          platforms: linux/amd64
          push: true
          tags: |
            ${{ vars.MO_IMAGE_NAME__MAIN }}:${{ env.VERSION }}
            ${{ vars.MO_IMAGE_NAME__MAIN }}:latest
            ${{ vars.MO_IMAGE_NAME__MAIN }}:${{ env.LAST_HASH }}
          build-args: VERSION=${{ env.VERSION }}
      - id: releaseWithMogenius-14b23df730eb58ef1de2
        name: Release with mogenius
        uses: mogenius/mogenius-release-action@v1
        with:
          dev: true
          image: ${{ vars.MO_IMAGE_NAME__MAIN }}:${{ env.VERSION }}
          kind: Deployment
          namespace: staging
          resourceName: frontend-dev-offolio
          containerName: frontend-dev-offolio
          keyKind: ${{ vars.MO_API_KIND__MAIN }}
          token: ${{ secrets.MO_API_TOKEN__14b23df730eb58ef1de2__MAIN }}
